name: Setup Kind Cluster with Ingress
description: Create a test Kubernetes cluster with Kind and install an ingress controller
inputs:
  clusterName:
    description: Name of the Kind cluster to create
    required: false
    default: 'kind'
  installIngress:
    description: Whether to install the ingress controller
    required: false
    default: 'false'
  installMetricServer:
    description: Whether to install the metric server
    required: false
    default: 'false'
  installPrometheus:
    description: Whether to install Prometheus
    required: false
    default: 'false'

runs:
  using: composite
  steps:
    - name: Create Kind Cluster
      id: create-cluster
      shell: bash
      run: |
        kind create cluster --name ${{inputs.clusterName}} --config ${GITHUB_ACTION_PATH}/kind-config.yaml

    - name: Install Ingress Controller
      id: install-ingress
      if: ${{ inputs.installIngress == 'true' }}
      shell: bash
      run: |
        kubectl apply -f ${GITHUB_ACTION_PATH}/ingress-nginx.yaml
    
    - name: Wait for Ingress Controller to be Ready
      id: wait-ingress
      if: ${{ inputs.installIngress == 'true' }}
      shell: bash
      run: |
        kubectl wait --namespace ingress-nginx \
          --for=condition=ready pod \
          --selector=app.kubernetes.io/component=controller \
          --timeout=120s
      
    - name: Install metric-server
      id: install-metric-server
      if: ${{ inputs.installMetricServer == 'true' }}
      shell: bash
      run: |
        helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/
        helm repo update
        helm upgrade --install metrics-server metrics-server/metrics-server \
          --namespace kube-system \
          -f ${GITHUB_ACTION_PATH}/metrics-server-values.yaml

    - name: Wait for metric-server to be Ready
      id: wait-metric-server
      if: ${{ inputs.installMetricServer == 'true' }}
      shell: bash
      run: |
        kubectl wait --namespace kube-system \
          --for=condition=ready pod \
          --selector=app.kubernetes.io/name=metrics-server \
          --timeout=120s

    - name: Install Prometheus
      id: install-prometheus
      if: ${{ inputs.installPrometheus == 'true' }}
      shell: bash
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
        helm upgrade --install prometheus prometheus-community/prometheus \
          --namespace monitoring \
          --create-namespace \
          -f ${GITHUB_ACTION_PATH}/prometheus-values.yaml
  
    - name: Wait for Prometheus to be Ready
      id: wait-prometheus
      if: ${{ inputs.installPrometheus == 'true' }}
      shell: bash
      run: |
        kubectl wait --namespace monitoring \
        --for=condition=ready pod \
        --selector=app.kubernetes.io/name=prometheus \
        --timeout=240s
    
    - name: Update Host file for Prometheus
      id: update-hostfile-prometheus
      if: ${{ inputs.installPrometheus == 'true' }}
      shell: bash
      run: |
         echo "127.0.0.1 prometheus.localhost" | sudo tee -a /etc/hosts
